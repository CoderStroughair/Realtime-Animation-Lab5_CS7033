#version 430

layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec3 vertex_normal;
layout(location = 2) in vec2 vertex_texture;
layout(location = 3) in ivec4 BoneIDs;			//An list of indexes into the list of Bones for this particular vertex
layout(location = 4) in vec4 Weights;			//A list of weights for each of the bones indexed above

uniform mat4 view, proj, model;

const int MAX_BONES = 100;

uniform vec3 light;

layout(location = 5) uniform mat4 BoneTransforms[MAX_BONES];

out vec3 position_eye, normal_eye, light_position_eye;
out vec2 texture_coordinates;
void main()
{
  mat4 BoneTransform = BoneTransforms[BoneIDs[0]] * Weights[0];
  BoneTransform += BoneTransforms[BoneIDs[1]] * Weights[1];
  BoneTransform += BoneTransforms[BoneIDs[2]] * Weights[2];
  BoneTransform += BoneTransforms[BoneIDs[3]] * Weights[3];

  texture_coordinates = vertex_texture;
  position_eye = vec3(view*model*vec4(vertex_position, 1.0));
  normal_eye = mat3(transpose(inverse(view*model))) * vertex_normal;  
  light_position_eye = vertex_position - light;
  gl_Position = proj* vec4(position_eye, 1.0);
}